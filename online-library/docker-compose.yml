version: '3.8'

services:
  node_app:
    container_name: node_app
    image: node:latest
    working_dir: /usr/src/app
    volumes:
      - .:/usr/src/app
    ports:
      - "3001:3000"
    environment:
      - NODE_ENV=development
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - DB_NAME=online_library
      - RABBITMQ_URL=amqp://rabbitmq:5672
    depends_on:
      - postgres
      - rabbitmq
    command: sh -c "npm install && npm start"

  postgres:
    container_name: postgres
    image: postgres:latest
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: online_library
    ports:
      - "5432:5432"
    volumes:
      - postgres:/var/www/online_library/docker-volumes/postgres

  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: admin
    volumes:
      - pgadmin:/var/www/online_library/docker-volumes/pgadmin
    ports:
      - "5050:80"

  rabbitmq:
    container_name: rabbitmq
    image: rabbitmq:3-management
    restart: always
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    volumes:
      - rabbitmq:/var/www/online_library/docker-volumes/rabbitmq

  #api-gateway:
  #  build: ./services/api-gateway
  #  depends_on:
  #    - rabbitmq
  #    - postgres
  #  environment:
  #    RABBITMQ_URL: amqp://rabbitmq
  #    DATABASE_URL: postgres://admin:postgres@postgres:5432/online_library
  #  ports:
  #    - "3000:3000"

volumes:
  node_app:
  postgres:
  pgadmin:
  rabbitmq: